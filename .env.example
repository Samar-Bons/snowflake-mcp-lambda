# =============================================================================
# Snowflake MCP Lambda Environment Configuration
# =============================================================================
# Copy this file to .env and fill in your actual values
# DO NOT commit .env to version control!

# =============================================================================
# Application Configuration
# =============================================================================

# Environment (development, production)
ENVIRONMENT=development

# Application settings
DEBUG=true
LOG_LEVEL=DEBUG

# =============================================================================
# Security Configuration
# =============================================================================

# Secret key for JWT and cryptographic operations (minimum 32 characters)
# IMPORTANT: Use a strong, random key in production!
SECRET_KEY=your-super-secret-key-change-this-to-something-secure-and-very-long

# Security headers
SECURITY_HEADERS=true

# =============================================================================
# Database Configuration
# =============================================================================

# PostgreSQL connection URL for user data storage
# Format: postgresql://username:password@host:port/database
DATABASE_URL=postgresql://postgres:postgres@localhost:5432/snowflake_mcp

# Redis connection URL for session management
# Format: redis://[:password]@host:port/database
REDIS_URL=redis://localhost:6379/0

# =============================================================================
# Google OAuth Configuration
# =============================================================================

# Google OAuth 2.0 credentials (get from Google Cloud Console)
# Client ID must end with .apps.googleusercontent.com
GOOGLE_CLIENT_ID=your-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your-client-secret

# OAuth callback URL (must match registered redirect URI)
GOOGLE_REDIRECT_URI=http://localhost:8000/auth/callback

# =============================================================================
# JWT Configuration
# =============================================================================

# JWT signing algorithm (recommended: HS256)
JWT_ALGORITHM=HS256

# JWT token expiry in hours (1-72, recommended: 24 for dev, 8 for prod)
JWT_EXPIRE_HOURS=24

# =============================================================================
# Snowflake Configuration
# =============================================================================
# Note: Actual user connections are stored securely per-user
# These are system-wide limits and timeouts

# Query timeout in seconds (5-300)
SNOWFLAKE_TIMEOUT_SECONDS=30

# Maximum rows returned per query (1-10000)
SNOWFLAKE_QUERY_ROW_LIMIT=500

# Schema cache TTL in seconds (60-86400)
SNOWFLAKE_SCHEMA_CACHE_TTL=3600

# =============================================================================
# Rate Limiting Configuration
# =============================================================================

# Requests per minute per user (1-1000)
RATE_LIMIT_REQUESTS_PER_MINUTE=60

# Burst size for rate limiting (1-100)
RATE_LIMIT_BURST_SIZE=10

# =============================================================================
# CORS Configuration
# =============================================================================

# Allowed CORS origins (comma-separated)
# Development example: http://localhost:3000,http://localhost:5173
# Production example: https://your-app.com,https://api.your-app.com
CORS_ORIGINS=http://localhost:3000,http://localhost:5173

# =============================================================================
# Logging Configuration
# =============================================================================

# Log output format (json or console)
LOG_FORMAT=json

# Enable correlation ID tracking for request tracing
ENABLE_CORRELATION_IDS=true

# External log service URL for centralized logging (optional)
# EXTERNAL_LOG_SERVICE_URL=https://your-log-service.com/api/logs

# =============================================================================
# Monitoring Configuration
# =============================================================================

# Enable performance metrics collection
ENABLE_PERFORMANCE_MONITORING=true

# Enable business metrics tracking
ENABLE_BUSINESS_METRICS=true

# Webhook URL for monitoring alerts (optional)
# MONITORING_ALERT_WEBHOOK_URL=https://your-webhook.com/alerts

# Metrics retention period in days (1-90)
METRICS_RETENTION_DAYS=30

# Performance sampling interval in seconds (10-3600)
PERFORMANCE_SAMPLE_INTERVAL=60

# =============================================================================
# Additional Notes
# =============================================================================

# LLM Configuration (Gemini API):
# - This application uses BYOK (Bring Your Own Key) model
# - Users provide their own Gemini API keys through the UI
# - No global Gemini API key is stored in configuration

# Snowflake User Connections:
# - Individual user Snowflake connections are stored encrypted per-user
# - The above SNOWFLAKE_* settings are system-wide limits only
# - Users configure their own account/warehouse/database through the UI

# Security Best Practices:
# - Use strong, unique SECRET_KEY (minimum 32 characters)
# - Never commit .env files with real secrets
# - Use HTTPS URLs for all production CORS origins
# - Regularly rotate secrets and API keys
# - Enable security headers in production

# Environment-Specific Files:
# - .env.development (for development environment)
# - .env.production (for production environment)
# - Copy this .env.example to .env and customize for your needs
