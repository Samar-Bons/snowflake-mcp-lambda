repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
      - id: check-merge-conflict
      - id: debug-statements

  # Use local hooks to ensure exact CI parity
  - repo: local
    hooks:
      # Ruff - linting and formatting (exactly as CI runs it)
      - id: ruff-check
        name: ruff check
        entry: poetry run ruff check --output-format=concise
        language: system
        types: [python]
        require_serial: true
        args: [backend/]
        
      - id: ruff-format
        name: ruff format
        entry: poetry run ruff format --check
        language: system
        types: [python]
        require_serial: true
        args: [backend/]
      
      # MyPy - type checking (exactly as CI runs it)
      - id: mypy
        name: mypy
        entry: poetry run mypy
        language: system
        types: [python]
        require_serial: true
        args: [backend/]
        pass_filenames: false
      
      # Pytest - full test suite with coverage (exactly as CI runs it)
      - id: pytest
        name: pytest with coverage
        entry: poetry run pytest
        language: system
        pass_filenames: false
        always_run: true
        args: [--cov=backend/app, --cov-report=term-missing, --cov-fail-under=85]
        stages: [commit]
      
      # Poetry check - ensure lock file is up to date
      - id: poetry-check
        name: poetry check
        entry: poetry check
        language: system
        pass_filenames: false
        files: pyproject.toml
      
      # Security check with bandit (via ruff S rules)
      - id: security-check
        name: security check
        entry: poetry run ruff check --select=S
        language: system
        types: [python]
        args: [backend/]

# Configuration to run all hooks
default_stages: [commit]
fail_fast: false  # Run all checks even if one fails